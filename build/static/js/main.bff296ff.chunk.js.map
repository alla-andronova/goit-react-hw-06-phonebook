{"version":3,"sources":["components/contactForm/ContactForm.jsx","components/contactList/ContactList.jsx","components/filter/Filter.jsx","components/hooks/hook.js","components/App.jsx","index.jsx","components/contactForm/ContactForm.module.css","components/contactList/ContactList.module.css","components/filter/Filter.module.css"],"names":["ContactForm","onSubmit","useState","name","setName","number","setNumber","handleChange","e","target","value","state","preventDefault","className","s","form","label","input","onChange","type","pattern","title","required","btn","ContactList","contacts","onDeleteClick","list","map","id","item","onClick","Filter","useLocalStorage","key","defaultValue","JSON","parse","window","localStorage","getItem","setState","useEffect","setItem","stringify","App","setContacts","filter","setFilter","normalizedFilter","toLowerCase","filteredContacts","contact","includes","style","textAlign","find","alert","uuidv4","length","currentTarget","dataset","newContacts","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"qQAKe,SAASA,EAAT,GAAoC,IAAbC,EAAY,EAAZA,SACpC,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAeMC,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,OAAlBN,EAAR,EAAQA,KAAMO,EAAd,EAAcA,MACd,OAAQP,GACN,IAAK,OACHC,GAAQ,SAAAO,GAAK,OAAID,KACjB,MACF,IAAK,SACHJ,GAAU,SAAAK,GAAK,OAAID,KACnB,MAEF,QACE,SAIN,OACE,mCACE,uBAAMT,SAzBW,SAAAO,GACnBA,EAAEI,iBAEFX,EAAS,CAAEE,OAAME,WAPjBD,GAAQ,SAAAO,GAAK,MAAI,MACjBL,GAAU,SAAAK,GAAK,MAAI,OA4BaE,UAAWC,IAAEC,KAA3C,UACE,wBAAOF,UAAWC,IAAEE,MAApB,iBAEE,uBACEH,UAAWC,IAAEG,MACbd,KAAK,OACLO,MAAOP,EACPe,SAAUX,EACVY,KAAK,OACLC,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,OAGZ,wBAAOT,UAAWC,IAAEE,MAApB,mBAEE,uBACEH,UAAWC,IAAEG,MACbd,KAAK,SACLO,MAAOL,EACPa,SAAUX,EACVY,KAAK,MACLC,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,OAGZ,wBAAQH,KAAK,SAASN,UAAWC,IAAES,IAAnC,8B,oBCrCOC,MA1Bf,YAAmD,IAA5BC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,cAC/B,OACE,oBAAIb,UAAWC,IAAEa,KAAjB,SACGF,EAASG,KAAI,gBAAGzB,EAAH,EAAGA,KAAME,EAAT,EAASA,OAAQwB,EAAjB,EAAiBA,GAAjB,OACZ,qBAAahB,UAAWC,IAAEgB,KAA1B,UACG3B,EADH,KACWE,EACT,wBACE,UAASwB,EACTV,KAAK,SACLY,QAAS,SAAAvB,GAAC,OAAIkB,EAAclB,IAC5BK,UAAWC,IAAES,IAJf,sBAFOM,S,gBCmBFG,MArBf,YAAsC,IAApBd,EAAmB,EAAnBA,SAAUR,EAAS,EAATA,MAC1B,OACE,mCACE,wBAAOG,UAAWC,IAAEE,MAApB,kCAEE,uBACEH,UAAWC,IAAEG,MACbE,KAAK,OACLT,MAAOA,EACPQ,SAAU,SAAAV,GAAC,OAAIU,EAASV,YCDnByB,EAXS,SAACC,EAAKC,GAC5B,MAA0BjC,oBACxB,kCAAMkC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQN,WAA7C,QAAsDC,KADxD,mBAAOxB,EAAP,KAAc8B,EAAd,KAOA,OAHAC,qBAAU,WACRJ,OAAOC,aAAaI,QAAQT,EAAKE,KAAKQ,UAAUjC,MAC/C,CAACuB,EAAKvB,IACF,CAACA,EAAO8B,ICHF,SAASI,IACtB,MAAgCZ,EAAgB,UAAW,IAA3D,mBAAOR,EAAP,KAAiBqB,EAAjB,KACA,EAA4B5C,mBAAS,IAArC,mBAAO6C,EAAP,KAAeC,EAAf,KAEMC,EAAmBF,EAAOG,cAE1BC,EAAmBF,EACrBxB,EAASsB,QAAO,SAAAK,GAAO,OACrBA,EAAQjD,KAAK+C,cAAcG,SAASJ,MAEtCxB,EAgCJ,OACE,qCACE,oBAAI6B,MAAO,CAAEC,UAAW,UAAxB,uBAEA,cAACvD,EAAD,CAAaC,SAlCE,SAAC,GAAsB,IAApBE,EAAmB,EAAnBA,KAAME,EAAa,EAAbA,OAC1B,GACEoB,EAAS+B,MACP,SAAAJ,GAAO,OAAIA,EAAQjD,KAAK+C,gBAAkB/C,EAAK+C,iBAGjDO,MAAM,GAAD,OAAItD,EAAJ,gCALP,CAQA,IAAMiD,EAAU,CACdjD,OACAE,SACAwB,GAAI6B,eAGNZ,GAAY,SAAAnC,GAAK,OAAKyC,GAAL,mBAAiBzC,WAqB/Bc,EAASkC,OAAS,GAAK,oBAAIL,MAAO,CAAEC,UAAW,UAAxB,sBAEvB9B,EAASkC,OAAS,GACjB,cAAC,EAAD,CAAQzC,SArBa,SAAAV,GACzBwC,EAAUxC,EAAEoD,cAAclD,QAoBgBA,MAAOqC,IAG/C,cAAC,EAAD,CAAatB,SAAU0B,EAAkBzB,cApBvB,SAAAlB,GACpB,IAAMqB,EAAKrB,EAAEC,OAAOoD,QAAQhC,GACtBiC,EAAcrC,EAASsB,QAAO,SAAAK,GAAO,OAAIA,EAAQvB,KAAOA,KAE9DiB,EAAYgB,GACZd,EAAU,UCzCde,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACpB,EAAD,MAEFqB,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,MAAQ,2BAA2B,IAAM,2B,kBCA/HD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,KAAO,0BAA0B,IAAM,2B,kBCA1FD,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,MAAQ,yB","file":"static/js/main.bff296ff.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from './ContactForm.module.css';\n\nexport default function ContactForm({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const reset = () => {\n    setName(state => '');\n    setNumber(state => '');\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    onSubmit({ name, number });\n\n    reset();\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(state => value);\n        break;\n      case 'number':\n        setNumber(state => value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className={s.form}>\n        <label className={s.label}>\n          Name\n          <input\n            className={s.input}\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n            type=\"text\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label className={s.label}>\n          Number\n          <input\n            className={s.input}\n            name=\"number\"\n            value={number}\n            onChange={handleChange}\n            type=\"tel\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <button type=\"submit\" className={s.btn}>\n          Add contact\n        </button>\n      </form>\n    </>\n  );\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nfunction ContactList({ contacts, onDeleteClick }) {\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ name, number, id }) => (\n        <li key={id} className={s.item}>\n          {name}: {number}\n          <button\n            data-id={id}\n            type=\"button\"\n            onClick={e => onDeleteClick(e)}\n            className={s.btn}\n          >\n            &#10060;\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string)).isRequired,\n  onDeleteClick: PropTypes.func.isRequired,\n  onClick: PropTypes.func,\n};\n\nexport default ContactList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from './Filter.module.css';\n\nfunction Filter({ onChange, value }) {\n  return (\n    <>\n      <label className={s.label}>\n        Find contacts by name\n        <input\n          className={s.input}\n          type=\"text\"\n          value={value}\n          onChange={e => onChange(e)}\n        />\n      </label>\n    </>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import { useState, useEffect } from 'react';\n\nconst useLocalStorage = (key, defaultValue) => {\n  const [state, setState] = useState(\n    () => JSON.parse(window.localStorage.getItem(key)) ?? defaultValue,\n  );\n\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n  return [state, setState];\n};\n\nexport default useLocalStorage;\n","import React, { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactForm from './contactForm/ContactForm';\nimport ContactList from './contactList/ContactList';\nimport Filter from './filter/Filter';\nimport useLocalStorage from './hooks/hook';\n\nexport default function App() {\n  const [contacts, setContacts] = useLocalStorage('contact', '');\n  const [filter, setFilter] = useState('');\n\n  const normalizedFilter = filter.toLowerCase();\n\n  const filteredContacts = normalizedFilter\n    ? contacts.filter(contact =>\n        contact.name.toLowerCase().includes(normalizedFilter),\n      )\n    : contacts;\n\n  const addContact = ({ name, number }) => {\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase(),\n      )\n    ) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    const contact = {\n      name,\n      number,\n      id: uuidv4(),\n    };\n\n    setContacts(state => [contact, ...state]);\n  };\n\n  const handleFilterChange = e => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const onDeleteClick = e => {\n    const id = e.target.dataset.id;\n    const newContacts = contacts.filter(contact => contact.id !== id);\n\n    setContacts(newContacts);\n    setFilter('');\n  };\n\n  return (\n    <>\n      <h1 style={{ textAlign: 'center' }}>Phonebook</h1>\n\n      <ContactForm onSubmit={addContact} />\n\n      {contacts.length > 0 && <h2 style={{ textAlign: 'center' }}>Contacts</h2>}\n\n      {contacts.length > 0 && (\n        <Filter onChange={handleFilterChange} value={filter} />\n      )}\n\n      <ContactList contacts={filteredContacts} onDeleteClick={onDeleteClick} />\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2IUqW\",\"label\":\"ContactForm_label__3cSwc\",\"input\":\"ContactForm_input__2u7Lv\",\"btn\":\"ContactForm_btn__2Kwxa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2K4PC\",\"item\":\"ContactList_item__3_vMR\",\"btn\":\"ContactList_btn__2LqVP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__23XmH\",\"input\":\"Filter_input__3K0YO\"};"],"sourceRoot":""}